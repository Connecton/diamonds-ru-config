name: Deploy Pages from artifact (Base64 via Gist)

on:
  workflow_dispatch:
    inputs:
      artifact_url:
        description: "Raw URL to dist.zip.b64"
        required: true
        type: string
      gist_id:
        description: "Gist ID (optional; will try to delete)"
        required: false
        type: string
  repository_dispatch:
    types: [publish-cohorts]

permissions:
  pages: write
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Resolve inputs/payload
        id: resolve
        run: |
          ART="${{ github.event.inputs.artifact_url || github.event.client_payload.artifact_url }}"
          GID="${{ github.event.inputs.gist_id      || github.event.client_payload.gist_id }}"
          echo "artifact=$ART" >> "$GITHUB_OUTPUT"
          echo "gist=$GID"     >> "$GITHUB_OUTPUT"
          echo "artifact_url: $ART"
          echo "gist_id: $GID"

      - name: Check artifact_url
        run: |
          test -n "${{ steps.resolve.outputs.artifact }}" \
            || (echo "::error::artifact_url is empty" && exit 1)

      - name: Download Base64 bundle
        run: |
          curl -fsSL "${{ steps.resolve.outputs.artifact }}" -o dist.zip.b64
          test -s dist.zip.b64

      - name: Delete Gist after download (optional)
        env:
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
          GIST_ID: ${{ steps.resolve.outputs.gist }}
        run: |
          if [ -n "$GIST_TOKEN" ] && [ -n "$GIST_ID" ]; then
            code=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE \
              -H "Authorization: token $GIST_TOKEN" \
              "https://api.github.com/gists/$GIST_ID")
            echo "Gist delete HTTP $code"
          else
            echo "Skipping gist delete."
          fi

      - name: Decode -> dist.zip and unzip into docs/
        run: |
          base64 -d dist.zip.b64 > dist.zip
          rm -rf docs
          mkdir -p docs
          unzip -q dist.zip -d docs
          touch docs/.nojekyll
          if [ ! -f docs/index.html ]; then
            printf '<!doctype html><meta charset="utf-8"><title>Diamonds Config CDN</title><p>OK.</p>' > docs/index.html
          fi
          echo "---- files in docs ----"
          find docs -maxdepth 2 -type f -print

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4